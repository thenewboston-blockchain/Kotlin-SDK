apply plugin: 'java-library'
apply plugin: 'kotlin'
apply plugin: 'kotlinx-serialization'
apply plugin: 'kotlin-kapt'
apply from: '../ktlint.gradle'
apply from: './jacoco.gradle'
apply from: '../sonar.gradle'

configurations {
  archives {
    extendsFrom configurations.default
  }
}

jacocoTestReport {
  reports {
    xml.enabled true
    xml.destination = file("${buildDir}/reports/jacoco/testReport/testReport.xml")
  }
}

tasks.withType(Test) {
  jacoco.includeNoLocationClasses = true
  jacoco.excludes = ['jdk.internal.*']
}


buildscript {
  repositories {
    jcenter()
  }
}

// Dependency Versions here
ext {
  ext.ktor_version = '1.4.0'
  ext.mockk_version = '1.10.0'
  ext.kserialization_version = "1.0.0"
  ext.kdatetime_version = "0.1.0"
  ext.coroutines_version = "1.4.0"
  ext.dagger_version = "2.28.3"
  ext.junit_version = "5.4.2"
  ext.kotest_version = "4.3.1"
}

test {
  useJUnitPlatform()
}

dependencies {
  implementation fileTree(dir: 'lib', include: ['*.jar'])
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

  // Ktor related dependencies
  implementation "io.ktor:ktor-client-core:$ktor_version"
  implementation "io.ktor:ktor-client-android:$ktor_version"
  implementation "io.ktor:ktor-client-cio:$ktor_version"
  implementation "io.ktor:ktor-client-serialization-jvm:$ktor_version"
  implementation "io.ktor:ktor-client-mock:$ktor_version"

  //Date time
  implementation "org.jetbrains.kotlinx:kotlinx-datetime:$kdatetime_version"

  //Coroutines
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"

  //Serialization
  implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$kserialization_version"

  //Dagger
  implementation "com.google.dagger:dagger:$dagger_version"
  kapt "com.google.dagger:dagger-compiler:$dagger_version"

  testImplementation "org.junit.jupiter:junit-jupiter:$junit_version"
  testImplementation "io.mockk:mockk:$mockk_version"
  testImplementation "io.ktor:ktor-server-test-host:$ktor_version"
  api "io.ktor:ktor-client-mock:$ktor_version"
  testImplementation "io.kotest:kotest-runner-junit5:$kotest_version"
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

compileKotlin {
  kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
  kotlinOptions.jvmTarget = "1.8"
}

